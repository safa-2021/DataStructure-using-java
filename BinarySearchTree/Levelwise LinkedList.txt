public static ArrayList<LinkedListNode<Integer>> constructLinkedListForEachLevel(BinaryTreeNode<Integer> root){

        ArrayList<LinkedListNode<Integer>> result = new ArrayList<>();
        
        if(root == null){
            return result;
        }
        Queue<BinaryTreeNode<Integer>> q = new LinkedList<>();
         q.add(root);
        
        while(q.size()>0){
            int n =q.size();
            
            LinkedListNode<Integer> head = null;
            for(int i=0;i<n;i++){
                BinaryTreeNode<Integer> p =q.poll();
                
                LinkedListNode<Integer> temp = new LinkedList<>(p.data);
                
                if(i==0){         //1
                    head=temp;
                    result.add(head);
                }
                else{    //2
                    head.next =temp;
                    head=head.next;
                }
                if(p.left!=null)
                    q.add(p.left);
                if(p.right!=null)
                    q.add(p.right);
            }
        }
        return result;
    }
 }
        