/*

    Following is the Node class already written for the Linked List

    class LinkedListNode<T> {
        T data;
        LinkedListNode<T> next;
    
        public LinkedListNode(T data) {
            this.data = data;
        }
    }

*/


public class Solution {

	public static LinkedListNode<Integer> evenAfterOdd(LinkedListNode<Integer> head) {
		//Your code goes here
        LinkedListNode<Integer> oddHead = null;
        LinkedListNode<Integer> oddTail = null;
        LinkedListNode<Integer> evenHead = null;
        LinkedListNode<Integer> evenTail = null;
        LinkedListNode<Integer> current = head;
        
        
        if(head==null){
            return null;
        }
      while(head!=null){
          if(head.data % 2 != 0 ){
              
              if(oddHead == null){
                  
                  oddHead=head;
                  oddTail=head;
                  
              }
              else{
                  oddTail.next=head;
                  oddTail=oddTail.next;
              }
              head=head.next;
          }
          else{
               if(evenHead == null){
                  
                  evenHead=head;
                  evenTail=head;
                  
              }
              else{
                  evenTail.next=head;
                  evenTail=evenTail.next;
              }
              head=head.next;
              
          }
          
          
      }
        if(oddHead==null){
            evenTail.next=null;
            return evenHead;
        }
        if(evenHead==null){
            oddTail.next=null;
            return oddHead;
        }
        oddTail.next=null;
        evenTail.next=null;
        oddTail.next=evenHead;
        return oddHead;
}
}
	
